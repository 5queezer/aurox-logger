version: '3'

services:
  webhook:
    build: .
    container_name: webhook
    restart: always
    environment:
      DATABASE_URL: "postgresql://postgres:${POSTGRES_PASSWORD}@db/postgres"
      WEBHOOK_PASSWORD: "${WEBHOOK_PASSWORD}"
    depends_on:
      - db
    security_opt:
      - no-new-privileges:true
    labels:
      # Enable this container to be mapped by traefik
      # For more information, see: https://docs.traefik.io/providers/docker/#exposedbydefault
      - "traefik.enable=true"
      # Define the network that should be used
      - "traefik.docker.network=proxy"
      # URL to reach this container
      - "traefik.http.routers.webhook.rule=Host('webhook.${PRIMARY_DOMAIN}')"
      # Activation of TLS
      - "traefik.http.routers.webhook.tls=true"
      # If port is different than 80, use the following service:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
    networks:
      - proxy
      - backend
    volumes:
      - ./app:/app
  db:
    image: postgres:latest
    container_name: database
    restart: always
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    networks:
      - backend
    volumes:
      - "db-data:/var/lib/postgresql/data"

networks:
  proxy:
    external: true
  backend:
    external: false

volumes:
  db-data:
